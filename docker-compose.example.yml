# Example Docker Compose service configuration for Paperless-NGX Telegram Concierge
#
# Add this service to your existing Paperless stack's docker-compose.yml file
# alongside your webserver, db, and broker services.
#
# PORTAINER USERS: Use the environment variable substitution method below.
# Define these variables in Portainer's stack environment variables section.

services:
  telegram-concierge:
    image: ghcr.io/<YOUR_GITHUB_USERNAME>/paperless-ngx-telegram-concierge:latest
    container_name: paperless-telegram-concierge
    restart: unless-stopped
    depends_on:
      - webserver  # Your Paperless-NGX webserver service
    networks:
      default: {}
      docker_vlan3:
        ipv4_address: 192.168.19.40  # Change this to fit your network
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges=true
    environment:
      # Required variables - Define these in Portainer's stack environment variables
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - AUTHORIZED_USERS=${AUTHORIZED_USERS}
      - PAPERLESS_URL=${PAPERLESS_URL:-http://webserver:8000}
      - PAPERLESS_TOKEN=${PAPERLESS_TOKEN}
      # Optional AI integration
      - PAPERLESS_AI_URL=${PAPERLESS_AI_URL}
      - PAPERLESS_AI_TOKEN=${PAPERLESS_AI_TOKEN}
    volumes:
      - /mnt/docker_containers/telegram_concierge_logs:/app/logs
      - /mnt/docker_containers/telegram_concierge_cache:/home/concierge/.paperless_concierge_cache

networks:
  default:
  docker_vlan3:
    external: true
